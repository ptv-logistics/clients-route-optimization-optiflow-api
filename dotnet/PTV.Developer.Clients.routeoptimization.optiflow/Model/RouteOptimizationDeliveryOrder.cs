/*
 * Route Optimization OptiFlow
 *
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.12
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = PTV.Developer.Clients.routeoptimization.optiflow.Client.OpenAPIDateConverter;

namespace PTV.Developer.Clients.routeoptimization.optiflow.Model
{
    /// <summary>
    /// An order to deliver goods, which are picked up from a depot.
    /// </summary>
    [DataContract(Name = "DeliveryOrder")]
    public partial class RouteOptimizationDeliveryOrder : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RouteOptimizationDeliveryOrder" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected RouteOptimizationDeliveryOrder() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="RouteOptimizationDeliveryOrder" /> class.
        /// </summary>
        /// <param name="id">A unique identifier of the order. This must be unique across all orders. (required).</param>
        /// <param name="delivery">delivery (required).</param>
        /// <param name="properties">properties.</param>
        public RouteOptimizationDeliveryOrder(string id = default(string), RouteOptimizationTaskProperties delivery = default(RouteOptimizationTaskProperties), RouteOptimizationOrderProperties properties = default(RouteOptimizationOrderProperties))
        {
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new ArgumentNullException("id is a required property for RouteOptimizationDeliveryOrder and cannot be null");
            }
            this.Id = id;
            // to ensure "delivery" is required (not null)
            if (delivery == null)
            {
                throw new ArgumentNullException("delivery is a required property for RouteOptimizationDeliveryOrder and cannot be null");
            }
            this.Delivery = delivery;
            this.Properties = properties;
        }

        /// <summary>
        /// A unique identifier of the order. This must be unique across all orders.
        /// </summary>
        /// <value>A unique identifier of the order. This must be unique across all orders.</value>
        /// <example>DELIVERY-123</example>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Delivery
        /// </summary>
        [DataMember(Name = "delivery", IsRequired = true, EmitDefaultValue = true)]
        public RouteOptimizationTaskProperties Delivery { get; set; }

        /// <summary>
        /// Gets or Sets Properties
        /// </summary>
        [DataMember(Name = "properties", EmitDefaultValue = false)]
        public RouteOptimizationOrderProperties Properties { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RouteOptimizationDeliveryOrder {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Delivery: ").Append(Delivery).Append("\n");
            sb.Append("  Properties: ").Append(Properties).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Id (string) maxLength
            if (this.Id != null && this.Id.Length > 36)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Id, length must be less than 36.", new [] { "Id" });
            }

            // Id (string) minLength
            if (this.Id != null && this.Id.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Id, length must be greater than 1.", new [] { "Id" });
            }

            if (this.Id != null) {
                // Id (string) pattern
                Regex regexId = new Regex(@"^[a-zA-Z0-9_-]{1,36}$", RegexOptions.CultureInvariant);
                if (!regexId.Match(this.Id).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Id, must match a pattern of " + regexId, new [] { "Id" });
                }
            }

            yield break;
        }
    }

}
