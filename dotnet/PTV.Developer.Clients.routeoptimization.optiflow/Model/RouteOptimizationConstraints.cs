/*
 * Route Optimization OptiFlow
 *
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.14
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = PTV.Developer.Clients.routeoptimization.optiflow.Client.OpenAPIDateConverter;

namespace PTV.Developer.Clients.routeoptimization.optiflow.Model
{
    /// <summary>
    /// Constraints that should be taken into account by optimization.
    /// </summary>
    [DataContract(Name = "Constraints")]
    public partial class RouteOptimizationConstraints : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RouteOptimizationConstraints" /> class.
        /// </summary>
        /// <param name="combinations">combinations.</param>
        /// <param name="orders">orders.</param>
        /// <param name="tasks">tasks.</param>
        public RouteOptimizationConstraints(RouteOptimizationCombinationConstraints combinations = default(RouteOptimizationCombinationConstraints), RouteOptimizationOrderConstraints orders = default(RouteOptimizationOrderConstraints), RouteOptimizationTaskConstraints tasks = default(RouteOptimizationTaskConstraints))
        {
            this.Combinations = combinations;
            this.Orders = orders;
            this.Tasks = tasks;
        }

        /// <summary>
        /// Gets or Sets Combinations
        /// </summary>
        [DataMember(Name = "combinations", EmitDefaultValue = false)]
        public RouteOptimizationCombinationConstraints Combinations { get; set; }

        /// <summary>
        /// Gets or Sets Orders
        /// </summary>
        [DataMember(Name = "orders", EmitDefaultValue = false)]
        public RouteOptimizationOrderConstraints Orders { get; set; }

        /// <summary>
        /// Gets or Sets Tasks
        /// </summary>
        [DataMember(Name = "tasks", EmitDefaultValue = false)]
        public RouteOptimizationTaskConstraints Tasks { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RouteOptimizationConstraints {\n");
            sb.Append("  Combinations: ").Append(Combinations).Append("\n");
            sb.Append("  Orders: ").Append(Orders).Append("\n");
            sb.Append("  Tasks: ").Append(Tasks).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
