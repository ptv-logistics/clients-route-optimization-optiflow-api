/*
 * Route Optimization OptiFlow
 *
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.14
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = PTV.Developer.Clients.routeoptimization.optiflow.Client.OpenAPIDateConverter;

namespace PTV.Developer.Clients.routeoptimization.optiflow.Model
{
    /// <summary>
    /// A description of a task that is scheduled for execution on a route.
    /// </summary>
    [DataContract(Name = "Task")]
    public partial class RouteOptimizationTask : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = true)]
        public RouteOptimizationTaskType? Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="RouteOptimizationTask" /> class.
        /// </summary>
        /// <param name="orderId">The unique identifier of the order whose pickup or delivery is described by this task..</param>
        /// <param name="type">type.</param>
        /// <param name="breaks">A list of breaks that are scheduled to be taken before the execution of the task..</param>
        /// <param name="start">The point in time when the execution of the task is scheduled to start. Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6)..</param>
        /// <param name="duration">The scheduled duration [s] for the task to be executed. This is the duration between the start and end of the task..</param>
        /// <param name="end">The point in time when the execution of the task is scheduled to end. Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6)..</param>
        /// <param name="compartmentId">The unique identifier of the compartment that the order needs to be loaded in or unloaded from..</param>
        /// <param name="depotId">The unique identifier of the depot in case the task is a pickup or a delivery at a depot..</param>
        public RouteOptimizationTask(string orderId = default(string), RouteOptimizationTaskType? type = default(RouteOptimizationTaskType?), List<RouteOptimizationBreak> breaks = default(List<RouteOptimizationBreak>), DateTimeOffset? start = default(DateTimeOffset?), int? duration = default(int?), DateTimeOffset? end = default(DateTimeOffset?), string compartmentId = default(string), string depotId = default(string))
        {
            this.OrderId = orderId;
            this.Type = type;
            this.Breaks = breaks;
            this.Start = start;
            this.Duration = duration;
            this.End = end;
            this.CompartmentId = compartmentId;
            this.DepotId = depotId;
        }

        /// <summary>
        /// The unique identifier of the order whose pickup or delivery is described by this task.
        /// </summary>
        /// <value>The unique identifier of the order whose pickup or delivery is described by this task.</value>
        /// <example>ORDER-123</example>
        [DataMember(Name = "orderId", EmitDefaultValue = true)]
        public string OrderId { get; set; }

        /// <summary>
        /// A list of breaks that are scheduled to be taken before the execution of the task.
        /// </summary>
        /// <value>A list of breaks that are scheduled to be taken before the execution of the task.</value>
        [DataMember(Name = "breaks", EmitDefaultValue = false)]
        public List<RouteOptimizationBreak> Breaks { get; set; }

        /// <summary>
        /// The point in time when the execution of the task is scheduled to start. Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>
        /// <value>The point in time when the execution of the task is scheduled to start. Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).</value>
        /// <example>2023-10-03T13:30Z</example>
        [DataMember(Name = "start", EmitDefaultValue = true)]
        public DateTimeOffset? Start { get; set; }

        /// <summary>
        /// The scheduled duration [s] for the task to be executed. This is the duration between the start and end of the task.
        /// </summary>
        /// <value>The scheduled duration [s] for the task to be executed. This is the duration between the start and end of the task.</value>
        /// <example>1800</example>
        [DataMember(Name = "duration", EmitDefaultValue = true)]
        public int? Duration { get; set; }

        /// <summary>
        /// The point in time when the execution of the task is scheduled to end. Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>
        /// <value>The point in time when the execution of the task is scheduled to end. Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).</value>
        /// <example>2023-10-03T14:00Z</example>
        [DataMember(Name = "end", EmitDefaultValue = true)]
        public DateTimeOffset? End { get; set; }

        /// <summary>
        /// The unique identifier of the compartment that the order needs to be loaded in or unloaded from.
        /// </summary>
        /// <value>The unique identifier of the compartment that the order needs to be loaded in or unloaded from.</value>
        /// <example>FROZEN</example>
        [DataMember(Name = "compartmentId", EmitDefaultValue = true)]
        public string CompartmentId { get; set; }

        /// <summary>
        /// The unique identifier of the depot in case the task is a pickup or a delivery at a depot.
        /// </summary>
        /// <value>The unique identifier of the depot in case the task is a pickup or a delivery at a depot.</value>
        /// <example>DEPOT-123</example>
        [DataMember(Name = "depotId", EmitDefaultValue = true)]
        public string DepotId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RouteOptimizationTask {\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Breaks: ").Append(Breaks).Append("\n");
            sb.Append("  Start: ").Append(Start).Append("\n");
            sb.Append("  Duration: ").Append(Duration).Append("\n");
            sb.Append("  End: ").Append(End).Append("\n");
            sb.Append("  CompartmentId: ").Append(CompartmentId).Append("\n");
            sb.Append("  DepotId: ").Append(DepotId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // OrderId (string) maxLength
            if (this.OrderId != null && this.OrderId.Length > 36)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for OrderId, length must be less than 36.", new [] { "OrderId" });
            }

            // OrderId (string) minLength
            if (this.OrderId != null && this.OrderId.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for OrderId, length must be greater than 1.", new [] { "OrderId" });
            }

            if (this.OrderId != null) {
                // OrderId (string) pattern
                Regex regexOrderId = new Regex(@"^[a-zA-Z0-9_-]{1,36}$", RegexOptions.CultureInvariant);
                if (!regexOrderId.Match(this.OrderId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for OrderId, must match a pattern of " + regexOrderId, new [] { "OrderId" });
                }
            }

            // Duration (int?) minimum
            if (this.Duration < (int?)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Duration, must be a value greater than or equal to 0.", new [] { "Duration" });
            }

            // CompartmentId (string) maxLength
            if (this.CompartmentId != null && this.CompartmentId.Length > 36)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CompartmentId, length must be less than 36.", new [] { "CompartmentId" });
            }

            // CompartmentId (string) minLength
            if (this.CompartmentId != null && this.CompartmentId.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CompartmentId, length must be greater than 1.", new [] { "CompartmentId" });
            }

            if (this.CompartmentId != null) {
                // CompartmentId (string) pattern
                Regex regexCompartmentId = new Regex(@"^[a-zA-Z0-9_-]{1,36}$", RegexOptions.CultureInvariant);
                if (!regexCompartmentId.Match(this.CompartmentId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CompartmentId, must match a pattern of " + regexCompartmentId, new [] { "CompartmentId" });
                }
            }

            // DepotId (string) maxLength
            if (this.DepotId != null && this.DepotId.Length > 36)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DepotId, length must be less than 36.", new [] { "DepotId" });
            }

            // DepotId (string) minLength
            if (this.DepotId != null && this.DepotId.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DepotId, length must be greater than 1.", new [] { "DepotId" });
            }

            if (this.DepotId != null) {
                // DepotId (string) pattern
                Regex regexDepotId = new Regex(@"^[a-zA-Z0-9_-]{1,36}$", RegexOptions.CultureInvariant);
                if (!regexDepotId.Match(this.DepotId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DepotId, must match a pattern of " + regexDepotId, new [] { "DepotId" });
                }
            }

            yield break;
        }
    }

}
