/*
 * Route Optimization OptiFlow
 *
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.12
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = PTV.Developer.Clients.routeoptimization.optiflow.Client.OpenAPIDateConverter;

namespace PTV.Developer.Clients.routeoptimization.optiflow.Model
{
    /// <summary>
    /// Describes constraints on combinations of orders, vehicles and depots.
    /// </summary>
    [DataContract(Name = "CombinationConstraints")]
    public partial class RouteOptimizationCombinationConstraints : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RouteOptimizationCombinationConstraints" /> class.
        /// </summary>
        /// <param name="orderCompartment">A list of constraints on combinations of orders and compartments..</param>
        /// <param name="orderVehicle">A list of constraints on combinations of orders and vehicles..</param>
        /// <param name="depotVehicle">A list of constraints on combinations of depots and vehicles..</param>
        public RouteOptimizationCombinationConstraints(List<RouteOptimizationOrderCompartmentCombinationConstraint> orderCompartment = default(List<RouteOptimizationOrderCompartmentCombinationConstraint>), List<RouteOptimizationOrderVehicleCombinationConstraint> orderVehicle = default(List<RouteOptimizationOrderVehicleCombinationConstraint>), List<RouteOptimizationDepotVehicleCombinationConstraint> depotVehicle = default(List<RouteOptimizationDepotVehicleCombinationConstraint>))
        {
            this.OrderCompartment = orderCompartment;
            this.OrderVehicle = orderVehicle;
            this.DepotVehicle = depotVehicle;
        }

        /// <summary>
        /// A list of constraints on combinations of orders and compartments.
        /// </summary>
        /// <value>A list of constraints on combinations of orders and compartments.</value>
        [DataMember(Name = "orderCompartment", EmitDefaultValue = false)]
        public List<RouteOptimizationOrderCompartmentCombinationConstraint> OrderCompartment { get; set; }

        /// <summary>
        /// A list of constraints on combinations of orders and vehicles.
        /// </summary>
        /// <value>A list of constraints on combinations of orders and vehicles.</value>
        [DataMember(Name = "orderVehicle", EmitDefaultValue = false)]
        public List<RouteOptimizationOrderVehicleCombinationConstraint> OrderVehicle { get; set; }

        /// <summary>
        /// A list of constraints on combinations of depots and vehicles.
        /// </summary>
        /// <value>A list of constraints on combinations of depots and vehicles.</value>
        [DataMember(Name = "depotVehicle", EmitDefaultValue = false)]
        public List<RouteOptimizationDepotVehicleCombinationConstraint> DepotVehicle { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RouteOptimizationCombinationConstraints {\n");
            sb.Append("  OrderCompartment: ").Append(OrderCompartment).Append("\n");
            sb.Append("  OrderVehicle: ").Append(OrderVehicle).Append("\n");
            sb.Append("  DepotVehicle: ").Append(DepotVehicle).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
