/*
 * Route Optimization OptiFlow
 *
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.14
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = PTV.Developer.Clients.routeoptimization.optiflow.Client.OpenAPIDateConverter;

namespace PTV.Developer.Clients.routeoptimization.optiflow.Model
{
    /// <summary>
    /// All necessary details of a task required to reconstruct its route.
    /// </summary>
    [DataContract(Name = "TaskStructure")]
    public partial class RouteOptimizationTaskStructure : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", IsRequired = true, EmitDefaultValue = true)]
        public RouteOptimizationTaskType Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="RouteOptimizationTaskStructure" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected RouteOptimizationTaskStructure() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="RouteOptimizationTaskStructure" /> class.
        /// </summary>
        /// <param name="orderId">The unique identifier of the order whose pickup or delivery is described by this task. (required).</param>
        /// <param name="type">type (required).</param>
        /// <param name="timeSlotId">The unique identifier of the time slot assigned to an appointment to execute the task. Required when time slots are defined at the task&#39;s location..</param>
        /// <param name="depotId">The unique identifier of the depot in case the task is a pickup or a delivery at a depot. Required for tasks scheduled at a depot, otherwise this must be omitted..</param>
        /// <param name="compartmentId">The unique identifier of the compartment that the order needs to be loaded in or unloaded from. Required when compartments are defined for the vehicle..</param>
        public RouteOptimizationTaskStructure(string orderId = default(string), RouteOptimizationTaskType type = default(RouteOptimizationTaskType), string timeSlotId = default(string), string depotId = default(string), string compartmentId = default(string))
        {
            // to ensure "orderId" is required (not null)
            if (orderId == null)
            {
                throw new ArgumentNullException("orderId is a required property for RouteOptimizationTaskStructure and cannot be null");
            }
            this.OrderId = orderId;
            this.Type = type;
            this.TimeSlotId = timeSlotId;
            this.DepotId = depotId;
            this.CompartmentId = compartmentId;
        }

        /// <summary>
        /// The unique identifier of the order whose pickup or delivery is described by this task.
        /// </summary>
        /// <value>The unique identifier of the order whose pickup or delivery is described by this task.</value>
        /// <example>ORDER-123</example>
        [DataMember(Name = "orderId", IsRequired = true, EmitDefaultValue = true)]
        public string OrderId { get; set; }

        /// <summary>
        /// The unique identifier of the time slot assigned to an appointment to execute the task. Required when time slots are defined at the task&#39;s location.
        /// </summary>
        /// <value>The unique identifier of the time slot assigned to an appointment to execute the task. Required when time slots are defined at the task&#39;s location.</value>
        /// <example>NOON</example>
        [DataMember(Name = "timeSlotId", EmitDefaultValue = true)]
        public string TimeSlotId { get; set; }

        /// <summary>
        /// The unique identifier of the depot in case the task is a pickup or a delivery at a depot. Required for tasks scheduled at a depot, otherwise this must be omitted.
        /// </summary>
        /// <value>The unique identifier of the depot in case the task is a pickup or a delivery at a depot. Required for tasks scheduled at a depot, otherwise this must be omitted.</value>
        /// <example>DEPOT-123</example>
        [DataMember(Name = "depotId", EmitDefaultValue = true)]
        public string DepotId { get; set; }

        /// <summary>
        /// The unique identifier of the compartment that the order needs to be loaded in or unloaded from. Required when compartments are defined for the vehicle.
        /// </summary>
        /// <value>The unique identifier of the compartment that the order needs to be loaded in or unloaded from. Required when compartments are defined for the vehicle.</value>
        /// <example>FROZEN</example>
        [DataMember(Name = "compartmentId", EmitDefaultValue = true)]
        public string CompartmentId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RouteOptimizationTaskStructure {\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  TimeSlotId: ").Append(TimeSlotId).Append("\n");
            sb.Append("  DepotId: ").Append(DepotId).Append("\n");
            sb.Append("  CompartmentId: ").Append(CompartmentId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // OrderId (string) maxLength
            if (this.OrderId != null && this.OrderId.Length > 36)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for OrderId, length must be less than 36.", new [] { "OrderId" });
            }

            // OrderId (string) minLength
            if (this.OrderId != null && this.OrderId.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for OrderId, length must be greater than 1.", new [] { "OrderId" });
            }

            if (this.OrderId != null) {
                // OrderId (string) pattern
                Regex regexOrderId = new Regex(@"^[a-zA-Z0-9_-]{1,36}$", RegexOptions.CultureInvariant);
                if (!regexOrderId.Match(this.OrderId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for OrderId, must match a pattern of " + regexOrderId, new [] { "OrderId" });
                }
            }

            // TimeSlotId (string) maxLength
            if (this.TimeSlotId != null && this.TimeSlotId.Length > 36)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for TimeSlotId, length must be less than 36.", new [] { "TimeSlotId" });
            }

            // TimeSlotId (string) minLength
            if (this.TimeSlotId != null && this.TimeSlotId.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for TimeSlotId, length must be greater than 1.", new [] { "TimeSlotId" });
            }

            if (this.TimeSlotId != null) {
                // TimeSlotId (string) pattern
                Regex regexTimeSlotId = new Regex(@"^[a-zA-Z0-9_-]{1,36}$", RegexOptions.CultureInvariant);
                if (!regexTimeSlotId.Match(this.TimeSlotId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for TimeSlotId, must match a pattern of " + regexTimeSlotId, new [] { "TimeSlotId" });
                }
            }

            // DepotId (string) maxLength
            if (this.DepotId != null && this.DepotId.Length > 36)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DepotId, length must be less than 36.", new [] { "DepotId" });
            }

            // DepotId (string) minLength
            if (this.DepotId != null && this.DepotId.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DepotId, length must be greater than 1.", new [] { "DepotId" });
            }

            if (this.DepotId != null) {
                // DepotId (string) pattern
                Regex regexDepotId = new Regex(@"^[a-zA-Z0-9_-]{1,36}$", RegexOptions.CultureInvariant);
                if (!regexDepotId.Match(this.DepotId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DepotId, must match a pattern of " + regexDepotId, new [] { "DepotId" });
                }
            }

            // CompartmentId (string) maxLength
            if (this.CompartmentId != null && this.CompartmentId.Length > 36)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CompartmentId, length must be less than 36.", new [] { "CompartmentId" });
            }

            // CompartmentId (string) minLength
            if (this.CompartmentId != null && this.CompartmentId.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CompartmentId, length must be greater than 1.", new [] { "CompartmentId" });
            }

            if (this.CompartmentId != null) {
                // CompartmentId (string) pattern
                Regex regexCompartmentId = new Regex(@"^[a-zA-Z0-9_-]{1,36}$", RegexOptions.CultureInvariant);
                if (!regexCompartmentId.Match(this.CompartmentId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CompartmentId, must match a pattern of " + regexCompartmentId, new [] { "CompartmentId" });
                }
            }

            yield break;
        }
    }

}
