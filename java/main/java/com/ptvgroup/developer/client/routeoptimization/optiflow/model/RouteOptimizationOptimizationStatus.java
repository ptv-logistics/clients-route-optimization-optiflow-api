/*
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routeoptimization.optiflow.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Describes the current status of the optimization. * &#x60;PREPARING&#x60; - The optimization has been accepted. Time-distance data is being calculated and the data is being prepared for optimization. * &#x60;RUNNING&#x60; - The routes are being optimized. Metrics will provide insights into the current result of the optimization. * &#x60;STOPPING&#x60; - A request has been received to stop the optimization. The optimization will stop as soon as possible. * &#x60;FAILED&#x60; - The optimization has failed. An error will be provided to clarify what went wrong. * &#x60;SUCCEEDED&#x60; - The optimization has completed successfully.
 */
public enum RouteOptimizationOptimizationStatus {
  
  PREPARING("PREPARING"),
  
  RUNNING("RUNNING"),
  
  STOPPING("STOPPING"),
  
  FAILED("FAILED"),
  
  SUCCEEDED("SUCCEEDED");

  private String value;

  RouteOptimizationOptimizationStatus(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static RouteOptimizationOptimizationStatus fromValue(String value) {
    for (RouteOptimizationOptimizationStatus b : RouteOptimizationOptimizationStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    if (prefix == null) {
      prefix = "";
    }

    return String.format("%s=%s", prefix, this.toString());
  }

}

