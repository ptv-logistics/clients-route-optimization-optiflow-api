/*
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routeoptimization.optiflow.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.routeoptimization.optiflow.model.RouteOptimizationError;
import com.ptvgroup.developer.client.routeoptimization.optiflow.model.RouteOptimizationMetrics;
import com.ptvgroup.developer.client.routeoptimization.optiflow.model.RouteOptimizationOptimizationResultMetadata;
import com.ptvgroup.developer.client.routeoptimization.optiflow.model.RouteOptimizationOptimizationStatus;
import com.ptvgroup.developer.client.routeoptimization.optiflow.model.RouteOptimizationRoute;
import com.ptvgroup.developer.client.routeoptimization.optiflow.model.RouteOptimizationWarning;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The current result of the optimization.
 */
@JsonPropertyOrder({
  RouteOptimizationOptimizationResult.JSON_PROPERTY_ID,
  RouteOptimizationOptimizationResult.JSON_PROPERTY_METADATA,
  RouteOptimizationOptimizationResult.JSON_PROPERTY_STATUS,
  RouteOptimizationOptimizationResult.JSON_PROPERTY_ROUTES,
  RouteOptimizationOptimizationResult.JSON_PROPERTY_METRICS,
  RouteOptimizationOptimizationResult.JSON_PROPERTY_ERROR,
  RouteOptimizationOptimizationResult.JSON_PROPERTY_WARNINGS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-09T08:40:59.150506716Z[Etc/UTC]", comments = "Generator version: 7.5.0")
public class RouteOptimizationOptimizationResult {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private RouteOptimizationOptimizationResultMetadata metadata;

  public static final String JSON_PROPERTY_STATUS = "status";
  private RouteOptimizationOptimizationStatus status;

  public static final String JSON_PROPERTY_ROUTES = "routes";
  private List<RouteOptimizationRoute> routes = new ArrayList<>();

  public static final String JSON_PROPERTY_METRICS = "metrics";
  private RouteOptimizationMetrics metrics;

  public static final String JSON_PROPERTY_ERROR = "error";
  private RouteOptimizationError error;

  public static final String JSON_PROPERTY_WARNINGS = "warnings";
  private List<RouteOptimizationWarning> warnings = new ArrayList<>();

  public RouteOptimizationOptimizationResult() { 
  }

  public RouteOptimizationOptimizationResult id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * The unique identifier of the optimization.
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public RouteOptimizationOptimizationResult metadata(RouteOptimizationOptimizationResultMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RouteOptimizationOptimizationResultMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(RouteOptimizationOptimizationResultMetadata metadata) {
    this.metadata = metadata;
  }


  public RouteOptimizationOptimizationResult status(RouteOptimizationOptimizationStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RouteOptimizationOptimizationStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(RouteOptimizationOptimizationStatus status) {
    this.status = status;
  }


  public RouteOptimizationOptimizationResult routes(List<RouteOptimizationRoute> routes) {
    this.routes = routes;
    return this;
  }

  public RouteOptimizationOptimizationResult addRoutesItem(RouteOptimizationRoute routesItem) {
    if (this.routes == null) {
      this.routes = new ArrayList<>();
    }
    this.routes.add(routesItem);
    return this;
  }

   /**
   * The routes scheduled by the optimization. As long as the optimization is not yet &#x60;SUCCEEDED&#x60;, scheduled routes may be only an intermediate result.
   * @return routes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RouteOptimizationRoute> getRoutes() {
    return routes;
  }


  @JsonProperty(JSON_PROPERTY_ROUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoutes(List<RouteOptimizationRoute> routes) {
    this.routes = routes;
  }


  public RouteOptimizationOptimizationResult metrics(RouteOptimizationMetrics metrics) {
    this.metrics = metrics;
    return this;
  }

   /**
   * Get metrics
   * @return metrics
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METRICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RouteOptimizationMetrics getMetrics() {
    return metrics;
  }


  @JsonProperty(JSON_PROPERTY_METRICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetrics(RouteOptimizationMetrics metrics) {
    this.metrics = metrics;
  }


  public RouteOptimizationOptimizationResult error(RouteOptimizationError error) {
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RouteOptimizationError getError() {
    return error;
  }


  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setError(RouteOptimizationError error) {
    this.error = error;
  }


  public RouteOptimizationOptimizationResult warnings(List<RouteOptimizationWarning> warnings) {
    this.warnings = warnings;
    return this;
  }

  public RouteOptimizationOptimizationResult addWarningsItem(RouteOptimizationWarning warningsItem) {
    if (this.warnings == null) {
      this.warnings = new ArrayList<>();
    }
    this.warnings.add(warningsItem);
    return this;
  }

   /**
   * A list of warnings concerning the optimization.
   * @return warnings
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RouteOptimizationWarning> getWarnings() {
    return warnings;
  }


  @JsonProperty(JSON_PROPERTY_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWarnings(List<RouteOptimizationWarning> warnings) {
    this.warnings = warnings;
  }


  /**
   * Return true if this OptimizationResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RouteOptimizationOptimizationResult optimizationResult = (RouteOptimizationOptimizationResult) o;
    return Objects.equals(this.id, optimizationResult.id) &&
        Objects.equals(this.metadata, optimizationResult.metadata) &&
        Objects.equals(this.status, optimizationResult.status) &&
        Objects.equals(this.routes, optimizationResult.routes) &&
        Objects.equals(this.metrics, optimizationResult.metrics) &&
        Objects.equals(this.error, optimizationResult.error) &&
        Objects.equals(this.warnings, optimizationResult.warnings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, metadata, status, routes, metrics, error, warnings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RouteOptimizationOptimizationResult {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    routes: ").append(toIndentedString(routes)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    warnings: ").append(toIndentedString(warnings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `metadata` to the URL query string
    if (getMetadata() != null) {
      joiner.add(getMetadata().toUrlQueryString(prefix + "metadata" + suffix));
    }

    // add `status` to the URL query string
    if (getStatus() != null) {
      joiner.add(String.format("%sstatus%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStatus()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `routes` to the URL query string
    if (getRoutes() != null) {
      for (int i = 0; i < getRoutes().size(); i++) {
        if (getRoutes().get(i) != null) {
          joiner.add(getRoutes().get(i).toUrlQueryString(String.format("%sroutes%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `metrics` to the URL query string
    if (getMetrics() != null) {
      joiner.add(getMetrics().toUrlQueryString(prefix + "metrics" + suffix));
    }

    // add `error` to the URL query string
    if (getError() != null) {
      joiner.add(getError().toUrlQueryString(prefix + "error" + suffix));
    }

    // add `warnings` to the URL query string
    if (getWarnings() != null) {
      for (int i = 0; i < getWarnings().size(); i++) {
        if (getWarnings().get(i) != null) {
          joiner.add(getWarnings().get(i).toUrlQueryString(String.format("%swarnings%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

