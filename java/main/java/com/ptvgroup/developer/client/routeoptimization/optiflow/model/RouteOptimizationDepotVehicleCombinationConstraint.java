/*
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routeoptimization.optiflow.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.routeoptimization.optiflow.model.RouteOptimizationDepotVehicleCombinationConstraintType;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * A constraint on the combination of depots and vehicles belonging to a certain category.
 */
@JsonPropertyOrder({
  RouteOptimizationDepotVehicleCombinationConstraint.JSON_PROPERTY_TYPE,
  RouteOptimizationDepotVehicleCombinationConstraint.JSON_PROPERTY_DEPOT_CATEGORY,
  RouteOptimizationDepotVehicleCombinationConstraint.JSON_PROPERTY_VEHICLE_CATEGORY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-02T08:00:16.777658760Z[Etc/UTC]", comments = "Generator version: 7.5.0")
public class RouteOptimizationDepotVehicleCombinationConstraint {
  public static final String JSON_PROPERTY_TYPE = "type";
  private RouteOptimizationDepotVehicleCombinationConstraintType type;

  public static final String JSON_PROPERTY_DEPOT_CATEGORY = "depotCategory";
  private String depotCategory;

  public static final String JSON_PROPERTY_VEHICLE_CATEGORY = "vehicleCategory";
  private String vehicleCategory;

  public RouteOptimizationDepotVehicleCombinationConstraint() { 
  }

  public RouteOptimizationDepotVehicleCombinationConstraint type(RouteOptimizationDepotVehicleCombinationConstraintType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RouteOptimizationDepotVehicleCombinationConstraintType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(RouteOptimizationDepotVehicleCombinationConstraintType type) {
    this.type = type;
  }


  public RouteOptimizationDepotVehicleCombinationConstraint depotCategory(String depotCategory) {
    this.depotCategory = depotCategory;
    return this;
  }

   /**
   * The category of depots to which the constraint applies. The constraint will be ignored when no depot belongs to this category.
   * @return depotCategory
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEPOT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDepotCategory() {
    return depotCategory;
  }


  @JsonProperty(JSON_PROPERTY_DEPOT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDepotCategory(String depotCategory) {
    this.depotCategory = depotCategory;
  }


  public RouteOptimizationDepotVehicleCombinationConstraint vehicleCategory(String vehicleCategory) {
    this.vehicleCategory = vehicleCategory;
    return this;
  }

   /**
   * The category of vehicles to which the constraint applies. The constraint will be ignored when no vehicle belongs to this category.
   * @return vehicleCategory
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VEHICLE_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVehicleCategory() {
    return vehicleCategory;
  }


  @JsonProperty(JSON_PROPERTY_VEHICLE_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVehicleCategory(String vehicleCategory) {
    this.vehicleCategory = vehicleCategory;
  }


  /**
   * Return true if this DepotVehicleCombinationConstraint object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RouteOptimizationDepotVehicleCombinationConstraint depotVehicleCombinationConstraint = (RouteOptimizationDepotVehicleCombinationConstraint) o;
    return Objects.equals(this.type, depotVehicleCombinationConstraint.type) &&
        Objects.equals(this.depotCategory, depotVehicleCombinationConstraint.depotCategory) &&
        Objects.equals(this.vehicleCategory, depotVehicleCombinationConstraint.vehicleCategory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, depotCategory, vehicleCategory);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RouteOptimizationDepotVehicleCombinationConstraint {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    depotCategory: ").append(toIndentedString(depotCategory)).append("\n");
    sb.append("    vehicleCategory: ").append(toIndentedString(vehicleCategory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format("%stype%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `depotCategory` to the URL query string
    if (getDepotCategory() != null) {
      joiner.add(String.format("%sdepotCategory%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDepotCategory()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `vehicleCategory` to the URL query string
    if (getVehicleCategory() != null) {
      joiner.add(String.format("%svehicleCategory%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getVehicleCategory()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

