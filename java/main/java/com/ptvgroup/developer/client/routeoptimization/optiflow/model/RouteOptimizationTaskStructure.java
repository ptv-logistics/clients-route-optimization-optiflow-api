/*
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routeoptimization.optiflow.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.routeoptimization.optiflow.model.RouteOptimizationTaskType;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * All necessary details of a task required to reconstruct its route.
 */
@JsonPropertyOrder({
  RouteOptimizationTaskStructure.JSON_PROPERTY_ORDER_ID,
  RouteOptimizationTaskStructure.JSON_PROPERTY_TYPE,
  RouteOptimizationTaskStructure.JSON_PROPERTY_TIME_SLOT_ID,
  RouteOptimizationTaskStructure.JSON_PROPERTY_DEPOT_ID,
  RouteOptimizationTaskStructure.JSON_PROPERTY_COMPARTMENT_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-09T08:40:59.150506716Z[Etc/UTC]", comments = "Generator version: 7.5.0")
public class RouteOptimizationTaskStructure {
  public static final String JSON_PROPERTY_ORDER_ID = "orderId";
  private String orderId;

  public static final String JSON_PROPERTY_TYPE = "type";
  private RouteOptimizationTaskType type;

  public static final String JSON_PROPERTY_TIME_SLOT_ID = "timeSlotId";
  private String timeSlotId;

  public static final String JSON_PROPERTY_DEPOT_ID = "depotId";
  private String depotId;

  public static final String JSON_PROPERTY_COMPARTMENT_ID = "compartmentId";
  private String compartmentId;

  public RouteOptimizationTaskStructure() { 
  }

  public RouteOptimizationTaskStructure orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * The unique identifier of the order whose pickup or delivery is described by this task.
   * @return orderId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ORDER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOrderId() {
    return orderId;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public RouteOptimizationTaskStructure type(RouteOptimizationTaskType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RouteOptimizationTaskType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(RouteOptimizationTaskType type) {
    this.type = type;
  }


  public RouteOptimizationTaskStructure timeSlotId(String timeSlotId) {
    this.timeSlotId = timeSlotId;
    return this;
  }

   /**
   * The unique identifier of the time slot assigned to an appointment to execute the task. Required when time slots are defined at the task&#39;s location.
   * @return timeSlotId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIME_SLOT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTimeSlotId() {
    return timeSlotId;
  }


  @JsonProperty(JSON_PROPERTY_TIME_SLOT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeSlotId(String timeSlotId) {
    this.timeSlotId = timeSlotId;
  }


  public RouteOptimizationTaskStructure depotId(String depotId) {
    this.depotId = depotId;
    return this;
  }

   /**
   * The unique identifier of the depot in case the task is a pickup or a delivery at a depot. Required for tasks scheduled at a depot, otherwise this must be omitted.
   * @return depotId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEPOT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDepotId() {
    return depotId;
  }


  @JsonProperty(JSON_PROPERTY_DEPOT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDepotId(String depotId) {
    this.depotId = depotId;
  }


  public RouteOptimizationTaskStructure compartmentId(String compartmentId) {
    this.compartmentId = compartmentId;
    return this;
  }

   /**
   * The unique identifier of the compartment that the order needs to be loaded in or unloaded from. Required when compartments are defined for the vehicle.
   * @return compartmentId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPARTMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCompartmentId() {
    return compartmentId;
  }


  @JsonProperty(JSON_PROPERTY_COMPARTMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompartmentId(String compartmentId) {
    this.compartmentId = compartmentId;
  }


  /**
   * Return true if this TaskStructure object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RouteOptimizationTaskStructure taskStructure = (RouteOptimizationTaskStructure) o;
    return Objects.equals(this.orderId, taskStructure.orderId) &&
        Objects.equals(this.type, taskStructure.type) &&
        Objects.equals(this.timeSlotId, taskStructure.timeSlotId) &&
        Objects.equals(this.depotId, taskStructure.depotId) &&
        Objects.equals(this.compartmentId, taskStructure.compartmentId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderId, type, timeSlotId, depotId, compartmentId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RouteOptimizationTaskStructure {\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    timeSlotId: ").append(toIndentedString(timeSlotId)).append("\n");
    sb.append("    depotId: ").append(toIndentedString(depotId)).append("\n");
    sb.append("    compartmentId: ").append(toIndentedString(compartmentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `orderId` to the URL query string
    if (getOrderId() != null) {
      joiner.add(String.format("%sorderId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getOrderId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format("%stype%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `timeSlotId` to the URL query string
    if (getTimeSlotId() != null) {
      joiner.add(String.format("%stimeSlotId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTimeSlotId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `depotId` to the URL query string
    if (getDepotId() != null) {
      joiner.add(String.format("%sdepotId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDepotId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `compartmentId` to the URL query string
    if (getCompartmentId() != null) {
      joiner.add(String.format("%scompartmentId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCompartmentId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

