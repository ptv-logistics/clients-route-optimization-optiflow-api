/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RouteOptimizationRoutingViolationStrategy } from './RouteOptimizationRoutingViolationStrategy';
import {
    RouteOptimizationRoutingViolationStrategyFromJSON,
    RouteOptimizationRoutingViolationStrategyFromJSONTyped,
    RouteOptimizationRoutingViolationStrategyToJSON,
} from './RouteOptimizationRoutingViolationStrategy';
import type { RouteOptimizationTrafficMode } from './RouteOptimizationTrafficMode';
import {
    RouteOptimizationTrafficModeFromJSON,
    RouteOptimizationTrafficModeFromJSONTyped,
    RouteOptimizationTrafficModeToJSON,
} from './RouteOptimizationTrafficMode';

/**
 * Specifies how time-distance data must be calculated for routes driven by the vehicle.
 * @export
 * @interface RouteOptimizationVehicleRouting
 */
export interface RouteOptimizationVehicleRouting {
    /**
     * A profile defines a vehicle by a set of attributes, matching typical transport situations. It must be the name of one of the predefined profiles `EUR_PEDESTRIAN`, `EUR_BICYCLE`, `EUR_CAR`, `EUR_VAN`, `EUR_TRUCK_7_49T`, `EUR_TRUCK_11_99T`, `EUR_TRUCK_40T`, `EUR_TRAILER_TRUCK`, `EUR_TLN_VAN`, `EUR_TLN_TRUCK_11_99T`, `EUR_TLN_TRUCK_20T`, `EUR_TLN_TRUCK_40T`, `AUS_LCV_LIGHT_COMMERCIAL`, `AUS_MR_MEDIUM_RIGID`, `AUS_HR_HEAVY_RIGID`, `IMEA_CAR`, `IMEA_VAN`, `IMEA_TRUCK_7_49T`, `IMEA_TRUCK_40T`, `USA_1_PICKUP`, `USA_5_DELIVERY`, `USA_8_SEMITRAILER_5AXLE`. At most ten profiles may be used within a single optimization.
     * Please note that the upper bound on number of different routing profiles is a technical limit. Check your individual price plan or contract to see which limits apply.
     * @type {string}
     * @memberof RouteOptimizationVehicleRouting
     */
    profile: string;
    /**
     * An additional factor to apply to the speed of the vehicle. When lower than one, the driving durations of the vehicle will increase, when greater than one, the driving durations of the vehicle will decrease.
     * @type {number}
     * @memberof RouteOptimizationVehicleRouting
     */
    speedFactor?: number;
    /**
     * 
     * @type {RouteOptimizationRoutingViolationStrategy}
     * @memberof RouteOptimizationVehicleRouting
     */
    violations?: RouteOptimizationRoutingViolationStrategy;
    /**
     * 
     * @type {RouteOptimizationTrafficMode}
     * @memberof RouteOptimizationVehicleRouting
     */
    trafficMode?: RouteOptimizationTrafficMode;
}

/**
 * Check if a given object implements the RouteOptimizationVehicleRouting interface.
 */
export function instanceOfRouteOptimizationVehicleRouting(value: object): boolean {
    if (!('profile' in value)) return false;
    return true;
}

export function RouteOptimizationVehicleRoutingFromJSON(json: any): RouteOptimizationVehicleRouting {
    return RouteOptimizationVehicleRoutingFromJSONTyped(json, false);
}

export function RouteOptimizationVehicleRoutingFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteOptimizationVehicleRouting {
    if (json == null) {
        return json;
    }
    return {
        
        'profile': json['profile'],
        'speedFactor': json['speedFactor'] == null ? undefined : json['speedFactor'],
        'violations': json['violations'] == null ? undefined : RouteOptimizationRoutingViolationStrategyFromJSON(json['violations']),
        'trafficMode': json['trafficMode'] == null ? undefined : RouteOptimizationTrafficModeFromJSON(json['trafficMode']),
    };
}

export function RouteOptimizationVehicleRoutingToJSON(value?: RouteOptimizationVehicleRouting | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'profile': value['profile'],
        'speedFactor': value['speedFactor'],
        'violations': RouteOptimizationRoutingViolationStrategyToJSON(value['violations']),
        'trafficMode': RouteOptimizationTrafficModeToJSON(value['trafficMode']),
    };
}

