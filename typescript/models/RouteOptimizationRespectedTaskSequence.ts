/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A sequence that must be respected when scheduling routes. Tasks with a category that occurs earlier in the sequence must be scheduled in the route before a task with a category later in the sequence.
 * @export
 * @interface RouteOptimizationRespectedTaskSequence
 */
export interface RouteOptimizationRespectedTaskSequence {
    /**
     * The sequence of task categories that needs to be respected within a route. The index of the category in the list determines the sequence. Categories that do not correspond to any task are ignored.
     * @type {Set<string>}
     * @memberof RouteOptimizationRespectedTaskSequence
     */
    taskCategories: Set<string>;
    /**
     * The category of vehicles to which this constraint applies. When omitted the constraint applies to all vehicles. The constraint will be ignored when no vehicle belongs to this category.
     * @type {string}
     * @memberof RouteOptimizationRespectedTaskSequence
     */
    vehicleCategory?: string;
}

/**
 * Check if a given object implements the RouteOptimizationRespectedTaskSequence interface.
 */
export function instanceOfRouteOptimizationRespectedTaskSequence(value: object): boolean {
    if (!('taskCategories' in value)) return false;
    return true;
}

export function RouteOptimizationRespectedTaskSequenceFromJSON(json: any): RouteOptimizationRespectedTaskSequence {
    return RouteOptimizationRespectedTaskSequenceFromJSONTyped(json, false);
}

export function RouteOptimizationRespectedTaskSequenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteOptimizationRespectedTaskSequence {
    if (json == null) {
        return json;
    }
    return {
        
        'taskCategories': json['taskCategories'],
        'vehicleCategory': json['vehicleCategory'] == null ? undefined : json['vehicleCategory'],
    };
}

export function RouteOptimizationRespectedTaskSequenceToJSON(value?: RouteOptimizationRespectedTaskSequence | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'taskCategories': Array.from(value['taskCategories'] as Set<any>),
        'vehicleCategory': value['vehicleCategory'],
    };
}

