/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A depot where pickup orders can be delivered to or delivery orders can be picked up from. When stopping at a depot, all pickup orders present in the vehicle are unloaded first. Afterwards delivery orders can be loaded in the vehicle, which must be delivered before stopping at the next depot.
 * When providing pickup or delivery orders, at least one depot should be specified.
 * When providing pickup-delivery orders, no tasks happen at the depot and depots must be omitted.
 * @export
 * @interface RouteOptimizationDepot
 */
export interface RouteOptimizationDepot {
    /**
     * A unique identifier of the depot.
     * @type {string}
     * @memberof RouteOptimizationDepot
     */
    id: string;
    /**
     * The unique identifier of the location where the depot is situated.
     * @type {string}
     * @memberof RouteOptimizationDepot
     */
    locationId: string;
    /**
     * A list of unique identifiers of the time slots of the depot location that can be used to execute tasks at this depot. When empty all time slots can be used.
     * @type {Array<string>}
     * @memberof RouteOptimizationDepot
     */
    timeSlotIds?: Array<string>;
    /**
     * A list of categories the depot belongs to that can be used to describe constraints or rules.
     * @type {Array<string>}
     * @memberof RouteOptimizationDepot
     */
    categories?: Array<string>;
}

/**
 * Check if a given object implements the RouteOptimizationDepot interface.
 */
export function instanceOfRouteOptimizationDepot(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('locationId' in value)) return false;
    return true;
}

export function RouteOptimizationDepotFromJSON(json: any): RouteOptimizationDepot {
    return RouteOptimizationDepotFromJSONTyped(json, false);
}

export function RouteOptimizationDepotFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteOptimizationDepot {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'locationId': json['locationId'],
        'timeSlotIds': json['timeSlotIds'] == null ? undefined : json['timeSlotIds'],
        'categories': json['categories'] == null ? undefined : json['categories'],
    };
}

export function RouteOptimizationDepotToJSON(value?: RouteOptimizationDepot | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'locationId': value['locationId'],
        'timeSlotIds': value['timeSlotIds'],
        'categories': value['categories'],
    };
}

