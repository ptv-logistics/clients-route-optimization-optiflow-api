/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RouteOptimizationForbiddenTaskSequence } from './RouteOptimizationForbiddenTaskSequence';
import {
    RouteOptimizationForbiddenTaskSequenceFromJSON,
    RouteOptimizationForbiddenTaskSequenceFromJSONTyped,
    RouteOptimizationForbiddenTaskSequenceToJSON,
} from './RouteOptimizationForbiddenTaskSequence';
import type { RouteOptimizationRespectedTaskSequence } from './RouteOptimizationRespectedTaskSequence';
import {
    RouteOptimizationRespectedTaskSequenceFromJSON,
    RouteOptimizationRespectedTaskSequenceFromJSONTyped,
    RouteOptimizationRespectedTaskSequenceToJSON,
} from './RouteOptimizationRespectedTaskSequence';
import type { RouteOptimizationTaskGroup } from './RouteOptimizationTaskGroup';
import {
    RouteOptimizationTaskGroupFromJSON,
    RouteOptimizationTaskGroupFromJSONTyped,
    RouteOptimizationTaskGroupToJSON,
} from './RouteOptimizationTaskGroup';

/**
 * Constraints on the way tasks can be scheduled together on routes.
 * @export
 * @interface RouteOptimizationTaskConstraints
 */
export interface RouteOptimizationTaskConstraints {
    /**
     * A list of task groups. Tasks belonging to the same task group must be planned on the same route, or consecutively if they are on the same route, depending on the constraint defined in the task group.
     * @type {Array<RouteOptimizationTaskGroup>}
     * @memberof RouteOptimizationTaskConstraints
     */
    groups?: Array<RouteOptimizationTaskGroup>;
    /**
     * A list of sequences that must be respected when scheduling routes. Tasks belonging to a category that occurs earlier in the sequence must be scheduled on the route before a task belonging to a category later in the sequence.
     * @type {Array<RouteOptimizationRespectedTaskSequence>}
     * @memberof RouteOptimizationTaskConstraints
     */
    respectedSequences?: Array<RouteOptimizationRespectedTaskSequence>;
    /**
     * A list of sequences that are forbidden to be scheduled on a route. Tasks belonging to certain categories must not be scheduled before, or immediately before, tasks belonging to another specific category.
     * @type {Array<RouteOptimizationForbiddenTaskSequence>}
     * @memberof RouteOptimizationTaskConstraints
     */
    forbiddenSequences?: Array<RouteOptimizationForbiddenTaskSequence>;
}

/**
 * Check if a given object implements the RouteOptimizationTaskConstraints interface.
 */
export function instanceOfRouteOptimizationTaskConstraints(value: object): boolean {
    return true;
}

export function RouteOptimizationTaskConstraintsFromJSON(json: any): RouteOptimizationTaskConstraints {
    return RouteOptimizationTaskConstraintsFromJSONTyped(json, false);
}

export function RouteOptimizationTaskConstraintsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteOptimizationTaskConstraints {
    if (json == null) {
        return json;
    }
    return {
        
        'groups': json['groups'] == null ? undefined : ((json['groups'] as Array<any>).map(RouteOptimizationTaskGroupFromJSON)),
        'respectedSequences': json['respectedSequences'] == null ? undefined : ((json['respectedSequences'] as Array<any>).map(RouteOptimizationRespectedTaskSequenceFromJSON)),
        'forbiddenSequences': json['forbiddenSequences'] == null ? undefined : ((json['forbiddenSequences'] as Array<any>).map(RouteOptimizationForbiddenTaskSequenceFromJSON)),
    };
}

export function RouteOptimizationTaskConstraintsToJSON(value?: RouteOptimizationTaskConstraints | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'groups': value['groups'] == null ? undefined : ((value['groups'] as Array<any>).map(RouteOptimizationTaskGroupToJSON)),
        'respectedSequences': value['respectedSequences'] == null ? undefined : ((value['respectedSequences'] as Array<any>).map(RouteOptimizationRespectedTaskSequenceToJSON)),
        'forbiddenSequences': value['forbiddenSequences'] == null ? undefined : ((value['forbiddenSequences'] as Array<any>).map(RouteOptimizationForbiddenTaskSequenceToJSON)),
    };
}

