/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Specifies an increased cost per effort if the route's repositioning effort goes above a threshold.
 * When two orders are loaded into the same compartment and delivered in the reverse order, we refer to them as a non-last-in-first-out (non-LIFO) pair. Any non-LIFO pair of orders requires repositioning in the vehicle, as the last picked-up order obstructs the first order that needs to be delivered. The effort involved in this repositioning is the minimum effort required for the two orders. The total repositioning effort for the route is the sum of the repositioning efforts for all non-LIFO pairs of orders.
 * @export
 * @interface RouteOptimizationRepositioningEffortCost
 */
export interface RouteOptimizationRepositioningEffortCost {
    /**
     * The threshold for the repositioning effort from which the cost per effort applies.
     * @type {number}
     * @memberof RouteOptimizationRepositioningEffortCost
     */
    threshold: number;
    /**
     * Specifies the extra cost for every unit of effort above the threshold. If the threshold of multiple repositioning effort costs is exceeded, the extra costs per effort are added.
     * @type {number}
     * @memberof RouteOptimizationRepositioningEffortCost
     */
    extraPerEffort: number;
}

/**
 * Check if a given object implements the RouteOptimizationRepositioningEffortCost interface.
 */
export function instanceOfRouteOptimizationRepositioningEffortCost(value: object): boolean {
    if (!('threshold' in value)) return false;
    if (!('extraPerEffort' in value)) return false;
    return true;
}

export function RouteOptimizationRepositioningEffortCostFromJSON(json: any): RouteOptimizationRepositioningEffortCost {
    return RouteOptimizationRepositioningEffortCostFromJSONTyped(json, false);
}

export function RouteOptimizationRepositioningEffortCostFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteOptimizationRepositioningEffortCost {
    if (json == null) {
        return json;
    }
    return {
        
        'threshold': json['threshold'],
        'extraPerEffort': json['extraPerEffort'],
    };
}

export function RouteOptimizationRepositioningEffortCostToJSON(value?: RouteOptimizationRepositioningEffortCost | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'threshold': value['threshold'],
        'extraPerEffort': value['extraPerEffort'],
    };
}

