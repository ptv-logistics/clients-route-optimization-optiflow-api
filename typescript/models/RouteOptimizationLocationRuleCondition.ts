/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A condition used to select which locations should be modified by a rule.  A condition is met if all its properties are matched.
 * @export
 * @interface RouteOptimizationLocationRuleCondition
 */
export interface RouteOptimizationLocationRuleCondition {
    /**
     * The rule applies only if the location belongs to this category. When omitted, it applies to all locations.
     * @type {string}
     * @memberof RouteOptimizationLocationRuleCondition
     */
    locationCategory?: string;
    /**
     * The rule applies only if the previous location in the route belongs to this category. When omitted, it applies independently of the previous location.
     * @type {string}
     * @memberof RouteOptimizationLocationRuleCondition
     */
    previousLocationCategory?: string;
    /**
     * The rule applies only if the vehicle visiting the location belongs to this category. When omitted, it applies independently of the vehicle visiting the location.
     * @type {string}
     * @memberof RouteOptimizationLocationRuleCondition
     */
    vehicleCategory?: string;
}

/**
 * Check if a given object implements the RouteOptimizationLocationRuleCondition interface.
 */
export function instanceOfRouteOptimizationLocationRuleCondition(value: object): boolean {
    return true;
}

export function RouteOptimizationLocationRuleConditionFromJSON(json: any): RouteOptimizationLocationRuleCondition {
    return RouteOptimizationLocationRuleConditionFromJSONTyped(json, false);
}

export function RouteOptimizationLocationRuleConditionFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteOptimizationLocationRuleCondition {
    if (json == null) {
        return json;
    }
    return {
        
        'locationCategory': json['locationCategory'] == null ? undefined : json['locationCategory'],
        'previousLocationCategory': json['previousLocationCategory'] == null ? undefined : json['previousLocationCategory'],
        'vehicleCategory': json['vehicleCategory'] == null ? undefined : json['vehicleCategory'],
    };
}

export function RouteOptimizationLocationRuleConditionToJSON(value?: RouteOptimizationLocationRuleCondition | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'locationCategory': value['locationCategory'],
        'previousLocationCategory': value['previousLocationCategory'],
        'vehicleCategory': value['vehicleCategory'],
    };
}

