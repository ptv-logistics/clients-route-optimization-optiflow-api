/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RouteOptimizationDepotVehicleCombinationConstraintType } from './RouteOptimizationDepotVehicleCombinationConstraintType';
import {
    RouteOptimizationDepotVehicleCombinationConstraintTypeFromJSON,
    RouteOptimizationDepotVehicleCombinationConstraintTypeFromJSONTyped,
    RouteOptimizationDepotVehicleCombinationConstraintTypeToJSON,
} from './RouteOptimizationDepotVehicleCombinationConstraintType';

/**
 * A constraint on the combination of depots and vehicles belonging to a certain category.
 * @export
 * @interface RouteOptimizationDepotVehicleCombinationConstraint
 */
export interface RouteOptimizationDepotVehicleCombinationConstraint {
    /**
     * 
     * @type {RouteOptimizationDepotVehicleCombinationConstraintType}
     * @memberof RouteOptimizationDepotVehicleCombinationConstraint
     */
    type: RouteOptimizationDepotVehicleCombinationConstraintType;
    /**
     * The category of depots to which the constraint applies. The constraint will be ignored when no depot belongs to this category.
     * @type {string}
     * @memberof RouteOptimizationDepotVehicleCombinationConstraint
     */
    depotCategory: string;
    /**
     * The category of vehicles to which the constraint applies. The constraint will be ignored when no vehicle belongs to this category.
     * @type {string}
     * @memberof RouteOptimizationDepotVehicleCombinationConstraint
     */
    vehicleCategory: string;
}

/**
 * Check if a given object implements the RouteOptimizationDepotVehicleCombinationConstraint interface.
 */
export function instanceOfRouteOptimizationDepotVehicleCombinationConstraint(value: object): boolean {
    if (!('type' in value)) return false;
    if (!('depotCategory' in value)) return false;
    if (!('vehicleCategory' in value)) return false;
    return true;
}

export function RouteOptimizationDepotVehicleCombinationConstraintFromJSON(json: any): RouteOptimizationDepotVehicleCombinationConstraint {
    return RouteOptimizationDepotVehicleCombinationConstraintFromJSONTyped(json, false);
}

export function RouteOptimizationDepotVehicleCombinationConstraintFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteOptimizationDepotVehicleCombinationConstraint {
    if (json == null) {
        return json;
    }
    return {
        
        'type': RouteOptimizationDepotVehicleCombinationConstraintTypeFromJSON(json['type']),
        'depotCategory': json['depotCategory'],
        'vehicleCategory': json['vehicleCategory'],
    };
}

export function RouteOptimizationDepotVehicleCombinationConstraintToJSON(value?: RouteOptimizationDepotVehicleCombinationConstraint | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': RouteOptimizationDepotVehicleCombinationConstraintTypeToJSON(value['type']),
        'depotCategory': value['depotCategory'],
        'vehicleCategory': value['vehicleCategory'],
    };
}

