/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RouteOptimizationLeg } from './RouteOptimizationLeg';
import {
    RouteOptimizationLegFromJSON,
    RouteOptimizationLegFromJSONTyped,
    RouteOptimizationLegToJSON,
} from './RouteOptimizationLeg';

/**
 * Describes the end of a route.
 * @export
 * @interface RouteOptimizationRouteEnd
 */
export interface RouteOptimizationRouteEnd {
    /**
     * The unique identifier of the location where the route ends.
     * @type {string}
     * @memberof RouteOptimizationRouteEnd
     */
    locationId?: string;
    /**
     * 
     * @type {RouteOptimizationLeg}
     * @memberof RouteOptimizationRouteEnd
     */
    approach?: RouteOptimizationLeg;
    /**
     * The point in time when the vehicle arrives at its end location. Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).
     * @type {Date}
     * @memberof RouteOptimizationRouteEnd
     */
    arrival?: Date;
    /**
     * The duration [s] between the arrival at the end location and the end of the route.
     * @type {number}
     * @memberof RouteOptimizationRouteEnd
     */
    duration?: number;
    /**
     * The point in time when the route ends. Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).
     * @type {Date}
     * @memberof RouteOptimizationRouteEnd
     */
    end?: Date;
}

/**
 * Check if a given object implements the RouteOptimizationRouteEnd interface.
 */
export function instanceOfRouteOptimizationRouteEnd(value: object): boolean {
    return true;
}

export function RouteOptimizationRouteEndFromJSON(json: any): RouteOptimizationRouteEnd {
    return RouteOptimizationRouteEndFromJSONTyped(json, false);
}

export function RouteOptimizationRouteEndFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteOptimizationRouteEnd {
    if (json == null) {
        return json;
    }
    return {
        
        'locationId': json['locationId'] == null ? undefined : json['locationId'],
        'approach': json['approach'] == null ? undefined : RouteOptimizationLegFromJSON(json['approach']),
        'arrival': json['arrival'] == null ? undefined : (new Date(json['arrival'])),
        'duration': json['duration'] == null ? undefined : json['duration'],
        'end': json['end'] == null ? undefined : (new Date(json['end'])),
    };
}

export function RouteOptimizationRouteEndToJSON(value?: RouteOptimizationRouteEnd | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'locationId': value['locationId'],
        'approach': RouteOptimizationLegToJSON(value['approach']),
        'arrival': value['arrival'] == null ? undefined : ((value['arrival']).toISOString()),
        'duration': value['duration'],
        'end': value['end'] == null ? undefined : ((value['end']).toISOString()),
    };
}

