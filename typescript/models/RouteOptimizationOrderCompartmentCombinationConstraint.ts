/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RouteOptimizationOrderCompartmentCombinationConstraintType } from './RouteOptimizationOrderCompartmentCombinationConstraintType';
import {
    RouteOptimizationOrderCompartmentCombinationConstraintTypeFromJSON,
    RouteOptimizationOrderCompartmentCombinationConstraintTypeFromJSONTyped,
    RouteOptimizationOrderCompartmentCombinationConstraintTypeToJSON,
} from './RouteOptimizationOrderCompartmentCombinationConstraintType';

/**
 * A constraint on the combination of orders and compartments belonging to a certain category.
 * @export
 * @interface RouteOptimizationOrderCompartmentCombinationConstraint
 */
export interface RouteOptimizationOrderCompartmentCombinationConstraint {
    /**
     * 
     * @type {RouteOptimizationOrderCompartmentCombinationConstraintType}
     * @memberof RouteOptimizationOrderCompartmentCombinationConstraint
     */
    type: RouteOptimizationOrderCompartmentCombinationConstraintType;
    /**
     * The category of orders to which the constraint applies. The constraint will be ignored when no order belongs to this category.
     * @type {string}
     * @memberof RouteOptimizationOrderCompartmentCombinationConstraint
     */
    orderCategory: string;
    /**
     * The category of compartments to which the constraint applies. The constraint will be ignored when no compartment belongs to this category.
     * @type {string}
     * @memberof RouteOptimizationOrderCompartmentCombinationConstraint
     */
    compartmentCategory: string;
}

/**
 * Check if a given object implements the RouteOptimizationOrderCompartmentCombinationConstraint interface.
 */
export function instanceOfRouteOptimizationOrderCompartmentCombinationConstraint(value: object): boolean {
    if (!('type' in value)) return false;
    if (!('orderCategory' in value)) return false;
    if (!('compartmentCategory' in value)) return false;
    return true;
}

export function RouteOptimizationOrderCompartmentCombinationConstraintFromJSON(json: any): RouteOptimizationOrderCompartmentCombinationConstraint {
    return RouteOptimizationOrderCompartmentCombinationConstraintFromJSONTyped(json, false);
}

export function RouteOptimizationOrderCompartmentCombinationConstraintFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteOptimizationOrderCompartmentCombinationConstraint {
    if (json == null) {
        return json;
    }
    return {
        
        'type': RouteOptimizationOrderCompartmentCombinationConstraintTypeFromJSON(json['type']),
        'orderCategory': json['orderCategory'],
        'compartmentCategory': json['compartmentCategory'],
    };
}

export function RouteOptimizationOrderCompartmentCombinationConstraintToJSON(value?: RouteOptimizationOrderCompartmentCombinationConstraint | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': RouteOptimizationOrderCompartmentCombinationConstraintTypeToJSON(value['type']),
        'orderCategory': value['orderCategory'],
        'compartmentCategory': value['compartmentCategory'],
    };
}

