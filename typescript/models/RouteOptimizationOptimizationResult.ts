/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RouteOptimizationMetrics } from './RouteOptimizationMetrics';
import {
    RouteOptimizationMetricsFromJSON,
    RouteOptimizationMetricsFromJSONTyped,
    RouteOptimizationMetricsToJSON,
} from './RouteOptimizationMetrics';
import type { RouteOptimizationOptimizationResultMetadata } from './RouteOptimizationOptimizationResultMetadata';
import {
    RouteOptimizationOptimizationResultMetadataFromJSON,
    RouteOptimizationOptimizationResultMetadataFromJSONTyped,
    RouteOptimizationOptimizationResultMetadataToJSON,
} from './RouteOptimizationOptimizationResultMetadata';
import type { RouteOptimizationOptimizationStatus } from './RouteOptimizationOptimizationStatus';
import {
    RouteOptimizationOptimizationStatusFromJSON,
    RouteOptimizationOptimizationStatusFromJSONTyped,
    RouteOptimizationOptimizationStatusToJSON,
} from './RouteOptimizationOptimizationStatus';
import type { RouteOptimizationRoute } from './RouteOptimizationRoute';
import {
    RouteOptimizationRouteFromJSON,
    RouteOptimizationRouteFromJSONTyped,
    RouteOptimizationRouteToJSON,
} from './RouteOptimizationRoute';
import type { RouteOptimizationWarning } from './RouteOptimizationWarning';
import {
    RouteOptimizationWarningFromJSON,
    RouteOptimizationWarningFromJSONTyped,
    RouteOptimizationWarningToJSON,
} from './RouteOptimizationWarning';

/**
 * The current result of the optimization.
 * @export
 * @interface RouteOptimizationOptimizationResult
 */
export interface RouteOptimizationOptimizationResult {
    /**
     * The unique identifier of the optimization.
     * @type {string}
     * @memberof RouteOptimizationOptimizationResult
     */
    id: string;
    /**
     * 
     * @type {RouteOptimizationOptimizationResultMetadata}
     * @memberof RouteOptimizationOptimizationResult
     */
    metadata?: RouteOptimizationOptimizationResultMetadata;
    /**
     * 
     * @type {RouteOptimizationOptimizationStatus}
     * @memberof RouteOptimizationOptimizationResult
     */
    status: RouteOptimizationOptimizationStatus;
    /**
     * The routes scheduled by the optimization. As long as the optimization is not yet `SUCCEEDED`, scheduled routes may be only an intermediate result.
     * @type {Array<RouteOptimizationRoute>}
     * @memberof RouteOptimizationOptimizationResult
     */
    routes?: Array<RouteOptimizationRoute>;
    /**
     * 
     * @type {RouteOptimizationMetrics}
     * @memberof RouteOptimizationOptimizationResult
     */
    metrics?: RouteOptimizationMetrics;
    /**
     * 
     * @type {Error}
     * @memberof RouteOptimizationOptimizationResult
     */
    error?: Error;
    /**
     * A list of warnings concerning the optimization.
     * @type {Array<RouteOptimizationWarning>}
     * @memberof RouteOptimizationOptimizationResult
     */
    warnings?: Array<RouteOptimizationWarning>;
}

/**
 * Check if a given object implements the RouteOptimizationOptimizationResult interface.
 */
export function instanceOfRouteOptimizationOptimizationResult(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('status' in value)) return false;
    return true;
}

export function RouteOptimizationOptimizationResultFromJSON(json: any): RouteOptimizationOptimizationResult {
    return RouteOptimizationOptimizationResultFromJSONTyped(json, false);
}

export function RouteOptimizationOptimizationResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteOptimizationOptimizationResult {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'metadata': json['metadata'] == null ? undefined : RouteOptimizationOptimizationResultMetadataFromJSON(json['metadata']),
        'status': RouteOptimizationOptimizationStatusFromJSON(json['status']),
        'routes': json['routes'] == null ? undefined : ((json['routes'] as Array<any>).map(RouteOptimizationRouteFromJSON)),
        'metrics': json['metrics'] == null ? undefined : RouteOptimizationMetricsFromJSON(json['metrics']),
        'error': json['error'] == null ? undefined : json['error'],
        'warnings': json['warnings'] == null ? undefined : ((json['warnings'] as Array<any>).map(RouteOptimizationWarningFromJSON)),
    };
}

export function RouteOptimizationOptimizationResultToJSON(value?: RouteOptimizationOptimizationResult | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'metadata': RouteOptimizationOptimizationResultMetadataToJSON(value['metadata']),
        'status': RouteOptimizationOptimizationStatusToJSON(value['status']),
        'routes': value['routes'] == null ? undefined : ((value['routes'] as Array<any>).map(RouteOptimizationRouteToJSON)),
        'metrics': RouteOptimizationMetricsToJSON(value['metrics']),
        'error': value['error'],
        'warnings': value['warnings'] == null ? undefined : ((value['warnings'] as Array<any>).map(RouteOptimizationWarningToJSON)),
    };
}

