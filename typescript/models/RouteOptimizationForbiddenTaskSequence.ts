/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RouteOptimizationForbiddenTaskSequenceType } from './RouteOptimizationForbiddenTaskSequenceType';
import {
    RouteOptimizationForbiddenTaskSequenceTypeFromJSON,
    RouteOptimizationForbiddenTaskSequenceTypeFromJSONTyped,
    RouteOptimizationForbiddenTaskSequenceTypeToJSON,
} from './RouteOptimizationForbiddenTaskSequenceType';

/**
 * Constrains tasks belonging a certain category to be executed before tasks belonging to another category on the route.
 * @export
 * @interface RouteOptimizationForbiddenTaskSequence
 */
export interface RouteOptimizationForbiddenTaskSequence {
    /**
     * The category of tasks that cannot be scheduled on the route before a task with the second task category. The constraint will be ignored when no task belongs to this category.
     * @type {string}
     * @memberof RouteOptimizationForbiddenTaskSequence
     */
    firstTaskCategory: string;
    /**
     * 
     * @type {RouteOptimizationForbiddenTaskSequenceType}
     * @memberof RouteOptimizationForbiddenTaskSequence
     */
    type: RouteOptimizationForbiddenTaskSequenceType;
    /**
     * The category of the tasks that must not be preceded in the route by tasks belonging to the first task category. The constraint will be ignored when no task belongs to this category.
     * @type {string}
     * @memberof RouteOptimizationForbiddenTaskSequence
     */
    secondTaskCategory: string;
    /**
     * The category of vehicles to which this constraint applies. When omitted the constraint applies to all vehicles. The constraint will be ignored when no vehicle belongs to this category.
     * @type {string}
     * @memberof RouteOptimizationForbiddenTaskSequence
     */
    vehicleCategory?: string;
}

/**
 * Check if a given object implements the RouteOptimizationForbiddenTaskSequence interface.
 */
export function instanceOfRouteOptimizationForbiddenTaskSequence(value: object): boolean {
    if (!('firstTaskCategory' in value)) return false;
    if (!('type' in value)) return false;
    if (!('secondTaskCategory' in value)) return false;
    return true;
}

export function RouteOptimizationForbiddenTaskSequenceFromJSON(json: any): RouteOptimizationForbiddenTaskSequence {
    return RouteOptimizationForbiddenTaskSequenceFromJSONTyped(json, false);
}

export function RouteOptimizationForbiddenTaskSequenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteOptimizationForbiddenTaskSequence {
    if (json == null) {
        return json;
    }
    return {
        
        'firstTaskCategory': json['firstTaskCategory'],
        'type': RouteOptimizationForbiddenTaskSequenceTypeFromJSON(json['type']),
        'secondTaskCategory': json['secondTaskCategory'],
        'vehicleCategory': json['vehicleCategory'] == null ? undefined : json['vehicleCategory'],
    };
}

export function RouteOptimizationForbiddenTaskSequenceToJSON(value?: RouteOptimizationForbiddenTaskSequence | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'firstTaskCategory': value['firstTaskCategory'],
        'type': RouteOptimizationForbiddenTaskSequenceTypeToJSON(value['type']),
        'secondTaskCategory': value['secondTaskCategory'],
        'vehicleCategory': value['vehicleCategory'],
    };
}

