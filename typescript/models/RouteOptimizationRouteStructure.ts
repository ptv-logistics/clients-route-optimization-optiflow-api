/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RouteOptimizationBreakStructure } from './RouteOptimizationBreakStructure';
import {
    RouteOptimizationBreakStructureFromJSON,
    RouteOptimizationBreakStructureFromJSONTyped,
    RouteOptimizationBreakStructureToJSON,
} from './RouteOptimizationBreakStructure';
import type { RouteOptimizationTaskStructure } from './RouteOptimizationTaskStructure';
import {
    RouteOptimizationTaskStructureFromJSON,
    RouteOptimizationTaskStructureFromJSONTyped,
    RouteOptimizationTaskStructureToJSON,
} from './RouteOptimizationTaskStructure';

/**
 * A description of the route structure that can be used to reconstruct the route.
 * @export
 * @interface RouteOptimizationRouteStructure
 */
export interface RouteOptimizationRouteStructure {
    /**
     * The unique identifier of the vehicle that is used to execute the route. Only a single route can be provided for each vehicle.
     * @type {string}
     * @memberof RouteOptimizationRouteStructure
     */
    vehicleId: string;
    /**
     * The point in time when the route should start. The start time will be respected as closely as possible.
     * Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6). The date must not be before `1970-01-01T00:00:00+00:00` nor after `2037-12-31T23:59:59+00:00`. The date must provide an offset to UTC.
     * @type {Date}
     * @memberof RouteOptimizationRouteStructure
     */
    start: Date;
    /**
     * A sequence of tasks scheduled on the route.
     * @type {Array<RouteOptimizationTaskStructure>}
     * @memberof RouteOptimizationRouteStructure
     */
    tasks?: Array<RouteOptimizationTaskStructure>;
    /**
     * A list of breaks scheduled on the route.
     * When omitted, reconstruction will make a best effort to schedule breaks in order to satisfy the break settings.
     * @type {Array<RouteOptimizationBreakStructure>}
     * @memberof RouteOptimizationRouteStructure
     */
    breaks?: Array<RouteOptimizationBreakStructure>;
}

/**
 * Check if a given object implements the RouteOptimizationRouteStructure interface.
 */
export function instanceOfRouteOptimizationRouteStructure(value: object): boolean {
    if (!('vehicleId' in value)) return false;
    if (!('start' in value)) return false;
    return true;
}

export function RouteOptimizationRouteStructureFromJSON(json: any): RouteOptimizationRouteStructure {
    return RouteOptimizationRouteStructureFromJSONTyped(json, false);
}

export function RouteOptimizationRouteStructureFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteOptimizationRouteStructure {
    if (json == null) {
        return json;
    }
    return {
        
        'vehicleId': json['vehicleId'],
        'start': (new Date(json['start'])),
        'tasks': json['tasks'] == null ? undefined : ((json['tasks'] as Array<any>).map(RouteOptimizationTaskStructureFromJSON)),
        'breaks': json['breaks'] == null ? undefined : ((json['breaks'] as Array<any>).map(RouteOptimizationBreakStructureFromJSON)),
    };
}

export function RouteOptimizationRouteStructureToJSON(value?: RouteOptimizationRouteStructure | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'vehicleId': value['vehicleId'],
        'start': ((value['start']).toISOString()),
        'tasks': value['tasks'] == null ? undefined : ((value['tasks'] as Array<any>).map(RouteOptimizationTaskStructureToJSON)),
        'breaks': value['breaks'] == null ? undefined : ((value['breaks'] as Array<any>).map(RouteOptimizationBreakStructureToJSON)),
    };
}

