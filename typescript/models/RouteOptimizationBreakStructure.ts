/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A break scheduled on a route.
 * @export
 * @interface RouteOptimizationBreakStructure
 */
export interface RouteOptimizationBreakStructure {
    /**
     * The point in time when the break starts.
     * Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).
     * The date must not be before `1970-01-01T00:00:00+00:00` nor after `2037-12-31T23:59:59+00:00`.
     * The date must provide an offset to UTC.
     * @type {Date}
     * @memberof RouteOptimizationBreakStructure
     */
    start: Date;
    /**
     * The duration [s] of the break.
     * @type {number}
     * @memberof RouteOptimizationBreakStructure
     */
    duration: number;
}

/**
 * Check if a given object implements the RouteOptimizationBreakStructure interface.
 */
export function instanceOfRouteOptimizationBreakStructure(value: object): boolean {
    if (!('start' in value)) return false;
    if (!('duration' in value)) return false;
    return true;
}

export function RouteOptimizationBreakStructureFromJSON(json: any): RouteOptimizationBreakStructure {
    return RouteOptimizationBreakStructureFromJSONTyped(json, false);
}

export function RouteOptimizationBreakStructureFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteOptimizationBreakStructure {
    if (json == null) {
        return json;
    }
    return {
        
        'start': (new Date(json['start'])),
        'duration': json['duration'],
    };
}

export function RouteOptimizationBreakStructureToJSON(value?: RouteOptimizationBreakStructure | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'start': ((value['start']).toISOString()),
        'duration': value['duration'],
    };
}

