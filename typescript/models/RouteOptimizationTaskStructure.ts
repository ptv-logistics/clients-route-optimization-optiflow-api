/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RouteOptimizationTaskType } from './RouteOptimizationTaskType';
import {
    RouteOptimizationTaskTypeFromJSON,
    RouteOptimizationTaskTypeFromJSONTyped,
    RouteOptimizationTaskTypeToJSON,
} from './RouteOptimizationTaskType';

/**
 * All necessary details of a task required to reconstruct its route.
 * @export
 * @interface RouteOptimizationTaskStructure
 */
export interface RouteOptimizationTaskStructure {
    /**
     * The unique identifier of the order whose pickup or delivery is described by this task.
     * @type {string}
     * @memberof RouteOptimizationTaskStructure
     */
    orderId: string;
    /**
     * 
     * @type {RouteOptimizationTaskType}
     * @memberof RouteOptimizationTaskStructure
     */
    type: RouteOptimizationTaskType;
    /**
     * The unique identifier of the time slot assigned to an appointment to execute the task.
     * Required when time slots are defined at the task's location.
     * @type {string}
     * @memberof RouteOptimizationTaskStructure
     */
    timeSlotId?: string;
    /**
     * The unique identifier of the depot in case the task is a pickup or a delivery at a depot.
     * Required for tasks scheduled at a depot, otherwise this must be omitted.
     * @type {string}
     * @memberof RouteOptimizationTaskStructure
     */
    depotId?: string;
    /**
     * The unique identifier of the compartment that the order needs to be loaded in or unloaded from.
     * Required when compartments are defined for the vehicle.
     * @type {string}
     * @memberof RouteOptimizationTaskStructure
     */
    compartmentId?: string;
}

/**
 * Check if a given object implements the RouteOptimizationTaskStructure interface.
 */
export function instanceOfRouteOptimizationTaskStructure(value: object): boolean {
    if (!('orderId' in value)) return false;
    if (!('type' in value)) return false;
    return true;
}

export function RouteOptimizationTaskStructureFromJSON(json: any): RouteOptimizationTaskStructure {
    return RouteOptimizationTaskStructureFromJSONTyped(json, false);
}

export function RouteOptimizationTaskStructureFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteOptimizationTaskStructure {
    if (json == null) {
        return json;
    }
    return {
        
        'orderId': json['orderId'],
        'type': RouteOptimizationTaskTypeFromJSON(json['type']),
        'timeSlotId': json['timeSlotId'] == null ? undefined : json['timeSlotId'],
        'depotId': json['depotId'] == null ? undefined : json['depotId'],
        'compartmentId': json['compartmentId'] == null ? undefined : json['compartmentId'],
    };
}

export function RouteOptimizationTaskStructureToJSON(value?: RouteOptimizationTaskStructure | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'orderId': value['orderId'],
        'type': RouteOptimizationTaskTypeToJSON(value['type']),
        'timeSlotId': value['timeSlotId'],
        'depotId': value['depotId'],
        'compartmentId': value['compartmentId'],
    };
}

