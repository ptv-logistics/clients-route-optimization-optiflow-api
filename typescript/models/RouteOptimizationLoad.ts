/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * For an order this describes how much capacity for a certain dimension is needed in the vehicle. For a vehicle, this describes its capacity for a certain dimension. For each dimension, the sum of the values of orders loaded into the vehicle must be lower than or equal to the value of the vehicle.
 * @export
 * @interface RouteOptimizationLoad
 */
export interface RouteOptimizationLoad {
    /**
     * Indicates the specific dimension of the load, such as its volume, weight, or size.
     * @type {string}
     * @memberof RouteOptimizationLoad
     */
    dimension: string;
    /**
     * Represents the numeric value associated with the load's dimension. This value could be the actual measurement or quantity of the load.
     * @type {number}
     * @memberof RouteOptimizationLoad
     */
    value: number;
}

/**
 * Check if a given object implements the RouteOptimizationLoad interface.
 */
export function instanceOfRouteOptimizationLoad(value: object): boolean {
    if (!('dimension' in value)) return false;
    if (!('value' in value)) return false;
    return true;
}

export function RouteOptimizationLoadFromJSON(json: any): RouteOptimizationLoad {
    return RouteOptimizationLoadFromJSONTyped(json, false);
}

export function RouteOptimizationLoadFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteOptimizationLoad {
    if (json == null) {
        return json;
    }
    return {
        
        'dimension': json['dimension'],
        'value': json['value'],
    };
}

export function RouteOptimizationLoadToJSON(value?: RouteOptimizationLoad | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'dimension': value['dimension'],
        'value': value['value'],
    };
}

