/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization OptiFlow
 * With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RouteOptimizationDeliveryOrder } from './RouteOptimizationDeliveryOrder';
import {
    RouteOptimizationDeliveryOrderFromJSON,
    RouteOptimizationDeliveryOrderFromJSONTyped,
    RouteOptimizationDeliveryOrderToJSON,
} from './RouteOptimizationDeliveryOrder';
import type { RouteOptimizationPickupDeliveryOrder } from './RouteOptimizationPickupDeliveryOrder';
import {
    RouteOptimizationPickupDeliveryOrderFromJSON,
    RouteOptimizationPickupDeliveryOrderFromJSONTyped,
    RouteOptimizationPickupDeliveryOrderToJSON,
} from './RouteOptimizationPickupDeliveryOrder';
import type { RouteOptimizationPickupOrder } from './RouteOptimizationPickupOrder';
import {
    RouteOptimizationPickupOrderFromJSON,
    RouteOptimizationPickupOrderFromJSONTyped,
    RouteOptimizationPickupOrderToJSON,
} from './RouteOptimizationPickupOrder';

/**
 * A list of orders that should be scheduled by the optimization on the routes. When providing pickup-delivery orders, it is not possible to provide other order types. If pickup orders or delivery orders are provided, at least one depot must be provided where the pickup orders can be delivered to or the delivery orders can be picked up from. The unique identifiers of the orders must by unique across the three types.
 * @export
 * @interface RouteOptimizationOrders
 */
export interface RouteOptimizationOrders {
    /**
     * A list of orders that must be picked up from a specific location and transported to a depot.
     * Please note that the upper bound on number of pickups is a technical limit. Check your individual price plan or contract to see which limits apply.
     * @type {Array<RouteOptimizationPickupOrder>}
     * @memberof RouteOptimizationOrders
     */
    pickups?: Array<RouteOptimizationPickupOrder>;
    /**
     * A list of orders that must be delivered to a specific location and transported from a depot.
     * Please note that the upper bound on number of deliveries is a technical limit. Check your individual price plan or contract to see which limits apply.
     * @type {Array<RouteOptimizationDeliveryOrder>}
     * @memberof RouteOptimizationOrders
     */
    deliveries?: Array<RouteOptimizationDeliveryOrder>;
    /**
     * A list of orders that must be picked up at a specific location and delivered to a specific location.
     * Please note that the upper bound on number of pickup-deliveries is a technical limit. Check your individual price plan or contract to see which limits apply.
     * @type {Array<RouteOptimizationPickupDeliveryOrder>}
     * @memberof RouteOptimizationOrders
     */
    pickupDeliveries?: Array<RouteOptimizationPickupDeliveryOrder>;
}

/**
 * Check if a given object implements the RouteOptimizationOrders interface.
 */
export function instanceOfRouteOptimizationOrders(value: object): boolean {
    return true;
}

export function RouteOptimizationOrdersFromJSON(json: any): RouteOptimizationOrders {
    return RouteOptimizationOrdersFromJSONTyped(json, false);
}

export function RouteOptimizationOrdersFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteOptimizationOrders {
    if (json == null) {
        return json;
    }
    return {
        
        'pickups': json['pickups'] == null ? undefined : ((json['pickups'] as Array<any>).map(RouteOptimizationPickupOrderFromJSON)),
        'deliveries': json['deliveries'] == null ? undefined : ((json['deliveries'] as Array<any>).map(RouteOptimizationDeliveryOrderFromJSON)),
        'pickupDeliveries': json['pickupDeliveries'] == null ? undefined : ((json['pickupDeliveries'] as Array<any>).map(RouteOptimizationPickupDeliveryOrderFromJSON)),
    };
}

export function RouteOptimizationOrdersToJSON(value?: RouteOptimizationOrders | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'pickups': value['pickups'] == null ? undefined : ((value['pickups'] as Array<any>).map(RouteOptimizationPickupOrderToJSON)),
        'deliveries': value['deliveries'] == null ? undefined : ((value['deliveries'] as Array<any>).map(RouteOptimizationDeliveryOrderToJSON)),
        'pickupDeliveries': value['pickupDeliveries'] == null ? undefined : ((value['pickupDeliveries'] as Array<any>).map(RouteOptimizationPickupDeliveryOrderToJSON)),
    };
}

